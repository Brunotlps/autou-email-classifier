# Generated by Django 5.2.5 on 2025-08-28 22:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("emails", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Classification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "classification_result",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("productive", "Produtivo"),
                            ("unproductive", "Não Produtivo"),
                        ],
                        help_text="Categoria atribuída ao email após classificação: Produtivo ou  Improdutivo.",
                        max_length=15,
                        null=True,
                        verbose_name="Categoria",
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        blank=True,
                        help_text="Valor entre 0.0 e 1.0 indicando a confiança da IA",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="Pontuação de Confiança",
                    ),
                ),
                (
                    "suggested_response",
                    models.TextField(
                        blank=True,
                        help_text="Resposta automática gerada pela IA",
                        null=True,
                        verbose_name="Resposta Sugerida",
                    ),
                ),
                (
                    "ai_model_used",
                    models.CharField(
                        blank=True,
                        help_text="Nome ou versão do modelo de IA utilizado para a classificação.",
                        max_length=100,
                        null=True,
                        verbose_name="Modelo de IA",
                    ),
                ),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pendente"),
                            ("processing", "Processando"),
                            ("completed", "Concluído"),
                            ("failed", "Falhou"),
                        ],
                        default="pending",
                        help_text="Status atual do processamento da classificação.",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Data e hora em que a classificação foi criada.",
                        verbose_name="Data de Criação",
                    ),
                ),
                (
                    "classified_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Data e hora em que a classificação foi concluída.",
                        null=True,
                        verbose_name="Data de Classificação",
                    ),
                ),
                (
                    "processing_time_seconds",
                    models.FloatField(
                        blank=True,
                        help_text="Tempo que levou para processar em segundos",
                        null=True,
                        verbose_name="Tempo de Processamento (seg)",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Mensagem de erro se o processamento falhar",
                        null=True,
                        verbose_name="Mensagem de Erro",
                    ),
                ),
                (
                    "email",
                    models.OneToOneField(
                        help_text="Email associado a esta classificação.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="classification",
                        to="emails.email",
                        verbose_name="Email",
                    ),
                ),
            ],
            options={
                "verbose_name": "Classificação",
                "verbose_name_plural": "Classificações",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["classification_result"],
                        name="classifier__classif_f8b527_idx",
                    ),
                    models.Index(
                        fields=["processing_status"],
                        name="classifier__process_06e482_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="classifier__created_9012ba_idx"
                    ),
                ],
            },
        ),
    ]
